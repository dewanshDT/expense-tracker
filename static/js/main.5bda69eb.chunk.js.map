{"version":3,"sources":["components/Header.js","components/context/TransContext.js","components/Balance.js","components/IncomeExpences.js","components/Transaction.js","components/TransactionList.js","components/AddTransaction.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","TransContext","React","createContext","TransProvider","children","useState","id","text","amount","trans","setTrans","Provider","value","Balance","useContext","amounts","map","item","total","length","reduce","acc","cvl","IncomeExpences","incomeArr","Math","abs","expenseArr","filter","calcTotal","arr","Transaction","transaction","sign","onClick","TransactionList","AddTransaction","setText","setAmount","onSubmit","e","newTransaction","floor","random","Number","parseInt","preventDefault","addTransaction","htmlFor","onChange","target","type","placeholder","required","Footer","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5bda69eb.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n\r\nconst Header = () => {\r\n  return <h2 className=\"header\">&#128176; Expense Tracker &#128176;</h2>;\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nexport const TransContext = React.createContext();\r\n\r\nexport const TransProvider = ({children}) => {\r\n    const [trans, setTrans] = React.useState([\r\n        { id: 1, text: \"Flower\", amount: -20 },\r\n        { id: 2, text: \"Salary\", amount: 300 },\r\n        { id: 3, text: \"Book\", amount: -10 },\r\n        { id: 4, text: \"Camera\", amount: 150 },\r\n      ]);\r\n\r\n      return (\r\n        <TransContext.Provider value={[trans, setTrans]}>\r\n          {children}\r\n        </TransContext.Provider>\r\n      )\r\n};\r\n\r\n","import React from \"react\";\r\nimport { TransContext } from \"./context/TransContext\";\r\n\r\nconst Balance = () => {\r\n  const [trans] = React.useContext(TransContext);\r\n\r\n  let amounts = trans.map((item) => item.amount);\r\n\r\n  const total = amounts.length ? amounts.reduce((acc, cvl) => acc += cvl) : 0;\r\n\r\n  return (\r\n    <div>\r\n      <h4>Your balnce</h4>\r\n      <h1 id=\"balance\">${total}</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Balance;\r\n","import React from \"react\";\r\nimport { TransContext } from \"./context/TransContext\";\r\n\r\nconst IncomeExpences = () => {\r\n  const [trans] = React.useContext(TransContext);\r\n\r\n  const incomeArr = trans.map(item => Math.abs(item.amount));\r\n  const expenseArr = trans.filter(item => item.amount < 0).map(item => item.amount);\r\n  const calcTotal = (arr) => {\r\n    const total = arr.length ? arr.reduce((acc, cvl) => acc + cvl) : 0;\r\n    return Math.abs(total);\r\n  } \r\n  \r\n  return (\r\n    <div className=\"inc-exp-container\">\r\n      <div className=\"income\">\r\n        <h4>Income</h4>\r\n        <p id=\"money-plus\" className=\"money plus\">\r\n          ${calcTotal(incomeArr) - calcTotal(expenseArr)}\r\n        </p>\r\n      </div>\r\n      <div className=\"expense\">\r\n        <h4>Expense</h4>\r\n        <p id=\"money-minus\" className=\"money minus\">\r\n          ${calcTotal(expenseArr)}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IncomeExpences;\r\n","import React from 'react'\r\n\r\n\r\nconst Transaction = ({transaction, trans, setTrans}) => {\r\n    const sign = transaction.amount > 0 ? '+' : '-'; \r\n\r\n    const deleteTransaction = () => {\r\n        setTrans(trans.filter(item => item.id !== transaction.id));\r\n    }\r\n\r\n    return (\r\n        <li className={transaction.amount > 0 ? \"plus\" : \"minus\"}>\r\n            {transaction.text} <span>{sign}${Math.abs(transaction.amount)}</span>\r\n            <button className=\"delete-btn\" onClick={deleteTransaction}>&times;</button>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Transaction\r\n","import React from \"react\";\r\nimport Transaction from \"./Transaction\";\r\nimport { TransContext } from \"./context/TransContext\";\r\n\r\n\r\nconst TransactionList = () => {\r\n  const [trans, setTrans] = React.useContext(TransContext);\r\n  return (\r\n    <>\r\n      <h3>History</h3>\r\n      <ul id=\"list\" className=\"list\">\r\n        {trans.map((item) => (\r\n            <Transaction key={item.id} trans={trans} transaction={item} setTrans={setTrans} />\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TransactionList;\r\n","import React from \"react\";\r\nimport { TransContext } from \"./context/TransContext\";\r\n\r\nconst AddTransaction = () => {\r\n  const [trans, setTrans] = React.useContext(TransContext);\r\n  const [text, setText] = React.useState(\"\");\r\n  const [amount, setAmount] = React.useState(0);\r\n\r\n  function generateID() {\r\n    return Math.floor(Math.random() * 100000000);\r\n  }\r\n\r\n  const addTransaction = (e) => {\r\n    const newTransaction = {\r\n      id: generateID(),\r\n      text,\r\n      amount: Number.parseInt(amount),\r\n    };\r\n    e.preventDefault();\r\n\r\n    setTrans([...trans, newTransaction]);\r\n    setAmount(0);\r\n    setText(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={(e) => addTransaction(e)}>\r\n        <h3>Add new transaction</h3>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"text\">Text</label>\r\n          <input\r\n            value={text}\r\n            onChange={(e) => setText(e.target.value)}\r\n            type=\"text\"\r\n            placeholder=\"enter text\"\r\n            required\r\n          />\r\n        </div>\r\n        \r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"amount\">Amount</label>\r\n          <input\r\n            value={amount}\r\n            onChange={(e) => setAmount(e.target.value)}\r\n            type=\"number\"\r\n            placeholder=\"enter amount\"\r\n            required\r\n          />\r\n        </div>\r\n        <button className=\"btn\">Add transaction</button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddTransaction;\r\n","import React from \"react\";\r\n\r\nconst Footer = () => {\r\n  return <div className=\"footer\">ðŸ’¸</div>;\r\n};\r\n\r\nexport default Footer;\r\n","import \"./App.css\";\nimport React from \"react\";\nimport Header from \"./components/Header\";\nimport Balance from \"./components/Balance\";\nimport IncomeExpences from \"./components/IncomeExpences\";\nimport TransactionList from \"./components/TransactionList\";\nimport AddTransaction from \"./components/AddTransaction\";\nimport Footer from \"./components/Footer\";\nimport { TransProvider } from \"./components/context/TransContext\";\n\nfunction App() {\n  return (\n    <TransProvider>\n      <Header />\n      <div className=\"container\">\n        <Balance />\n        <IncomeExpences />\n        <AddTransaction />\n        <TransactionList />\n      </div>\n      <Footer />\n    </TransProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}