{"version":3,"sources":["components/Header.js","components/Balance.js","components/IncomeExpences.js","components/Transaction.js","components/TransactionList.js","components/AddTransaction.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","Balance","total","transactions","map","item","amount","reduce","acc","cvl","id","IncomeExpences","incomeArr","Math","abs","expenseArr","filter","calcTotal","arr","Transaction","transaction","setTransactions","sign","text","onClick","TransactionList","AddTransaction","React","useState","setText","setAmount","onSubmit","e","newTransaction","floor","random","Number","parseInt","preventDefault","addTransaction","htmlFor","value","onChange","target","type","placeholder","required","Footer","App","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.91576691.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Header = () => {\r\n  return <h2 className=\"header\">&#128176; Expense Tracker &#128176;</h2>;\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nconst Balance = ({transactions}) => {\r\n\r\n  let amounts = transactions.map(item => item.amount);\r\n\r\n  const total = amounts.reduce((acc, cvl) => acc + cvl);\r\n\r\n  return (\r\n    <div>\r\n      <h4>Your balnce</h4>\r\n      <h1 id=\"balance\">${total}</h1> \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Balance;\r\n","import React from \"react\";\r\n\r\nconst IncomeExpences = ({transactions}) => {\r\n\r\n  const incomeArr = transactions.map(item => Math.abs(item.amount));\r\n  const expenseArr = transactions.filter(item => item.amount < 0).map(item => item.amount);\r\n  const calcTotal = (arr) => {\r\n    const total = arr.reduce((acc, cvl) => acc + cvl);\r\n    return Math.abs(total);\r\n  } \r\n  \r\n  return (\r\n    <div className=\"inc-exp-container\">\r\n      <div>\r\n        <h4>Income</h4>\r\n        <p id=\"money-plus\" className=\"money plus\">\r\n          ${calcTotal(incomeArr) - calcTotal(expenseArr)}\r\n        </p>\r\n      </div>\r\n      <div>\r\n        <h4>Expense</h4>\r\n        <p id=\"money-minus\" className=\"money minus\">\r\n          ${calcTotal(expenseArr)}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IncomeExpences;\r\n","import React from 'react'\r\n\r\nconst Transaction = ({transaction, transactions, setTransactions}) => {\r\n    const sign = transaction.amount > 0 ? '+' : '-'; \r\n\r\n    const deleteTransaction = () => {\r\n        setTransactions(transactions.filter(item => item.id !== transaction.id));\r\n    }\r\n\r\n    return (\r\n        <li className={transaction.amount > 0 ? \"plus\" : \"minus\"}>\r\n            {transaction.text} <span>{sign}${Math.abs(transaction.amount)}</span>\r\n            <button className=\"delete-btn\" onClick={deleteTransaction}>&times;</button>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Transaction\r\n","import React from \"react\";\r\nimport Transaction from \"./Transaction\";\r\n\r\nconst TransactionList = ({ transactions, setTransactions }) => {\r\n  return (\r\n    <>\r\n      <h3>History</h3>\r\n      <ul id=\"list\" className=\"list\">\r\n        {transactions.map((item) => (\r\n            <Transaction key={item.id} transactions={transactions} transaction={item} setTransactions={setTransactions} />\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TransactionList;\r\n","import React from \"react\";\r\n\r\nconst AddTransaction = ({ setTransactions, transactions }) => {\r\n  const [text, setText] = React.useState(\"\");\r\n  const [amount, setAmount] = React.useState(0);\r\n\r\n  function generateID() {\r\n    return Math.floor(Math.random() * 100000000);\r\n  }\r\n\r\n  const addTransaction = (e) => {\r\n    const newTransaction = {\r\n      id: generateID(),\r\n      text,\r\n      amount: Number.parseInt(amount),\r\n    };\r\n    e.preventDefault();\r\n\r\n    setTransactions([...transactions, newTransaction]);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={(e) => addTransaction(e)}>\r\n        <h3>Add new transaction</h3>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"text\">Text</label>\r\n          <input\r\n            value={text}\r\n            onChange={(e) => setText(e.target.value)}\r\n            type=\"text\"\r\n            placeholder=\"enter text\"\r\n            required\r\n          />\r\n        </div>\r\n        \r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"amount\">Amount</label>\r\n          <input\r\n            value={amount}\r\n            onChange={(e) => setAmount(e.target.value)}\r\n            type=\"number\"\r\n            placeholder=\"enter amount\"\r\n            required\r\n          />\r\n        </div>\r\n        <button className=\"btn\">Add transaction</button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddTransaction;\r\n","import React from \"react\";\r\n\r\nconst Footer = () => {\r\n  return <div className=\"footer\">&copy; dewanshdt 2020</div>;\r\n};\r\n\r\nexport default Footer;\r\n","import \"./App.css\";\nimport React from \"react\";\nimport Header from \"./components/Header\";\nimport Balance from \"./components/Balance\";\nimport IncomeExpences from \"./components/IncomeExpences\";\nimport TransactionList from \"./components/TransactionList\";\nimport AddTransaction from \"./components/AddTransaction\";\nimport Footer from \"./components/Footer\";\n\nfunction App() {\n  const [transactions, setTransactions] = React.useState([\n    { id: 1, text: \"Flower\", amount: -20 },\n    { id: 2, text: \"Salary\", amount: 300 },\n    { id: 3, text: \"Book\", amount: -10 },\n    { id: 4, text: \"Camera\", amount: 150 },\n  ]);\n\n  return (\n    <>\n      <Header />\n      <div className=\"container\">\n        {transactions.length > 0 && <Balance transactions={transactions} />}\n        {transactions.length > 1 && (\n          <IncomeExpences transactions={transactions} />\n        )}\n        <AddTransaction\n          setTransactions={setTransactions}\n          transactions={transactions}\n        />\n        {transactions.length > 0 && (\n          <TransactionList\n            transactions={transactions}\n            setTransactions={setTransactions}\n          />\n        )}\n      </div>\n      <Footer />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}